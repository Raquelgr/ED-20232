- Em uma análise inicial, notamos que alocamos 26 bytes para a variável do tipo char "alphabet" e tentamos fazer uma iteração 26 vezes atribuindo a cada vez uma letra a um endereço de memória,
porém temos que adicionar mais um byte para o caractere ' \0 ' que termina a string.
Então, a última escrita é feita em um outro endereço de memória sem ser o bloco de 26 bytes que alocamos;

- Analise com Valgrind
==37801== Memcheck, a memory error detector
==37801== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==37801== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==37801== Command: ./c7
==37801==
==37801== Invalid write of size 1
==37801==	at 0x1091BC: main (in /home/italo/Desktop/pa03/c7)
==37801==  Address 0x4a9605a is 0 bytes after a block of size 26 alloc'd
==37801==	at 0x484DA83: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==37801==	by 0x109183: main (in /home/italo/Desktop/pa03/c7)
==37801==
==37801==
==37801== HEAP SUMMARY:
==37801== 	in use at exit: 0 bytes in 0 blocks
==37801==   total heap usage: 1 allocs, 1 frees, 26 bytes allocated
==37801==
==37801== All heap blocks were freed -- no leaks are possible
==37801==
==37801== For lists of detected and suppressed errors, rerun with: -s
==37801== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

- Solução
Alocar 27 posições

- Análise da correção
==37934== Memcheck, a memory error detector
==37934== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==37934== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==37934== Command: ./c7correto
==37934==
==37934==
==37934== HEAP SUMMARY:
==37934== 	in use at exit: 0 bytes in 0 blocks
==37934==   total heap usage: 1 allocs, 1 frees, 27 bytes allocated
==37934==
==37934== All heap blocks were freed -- no leaks are possible
==37934==
==37934== For lists of detected and suppressed errors, rerun with: -s
==37934== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)